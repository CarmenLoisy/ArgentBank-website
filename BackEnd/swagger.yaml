swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase (transactions)
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Return a list of transactions
      description: Get all transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: Id of the account
          required: true
          type: string
      operationId: getAllTransactions
      responses:
        '200':
          description: Current month transactions successfully loaded
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: User is not authorized
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /user/profile/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Find transaction by ID
      description: Returns a single transaction
      operationId: getTransactionById
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: Id of the account
          required: true
          type: string
        - name: transactionId
          in: path
          description: Id of the transaction
          required: true
          type: string
      responses:
        '200':
          description: Transaction successfully loaded
          schema:
            $ref: '#/definitions/TransactionDetail'
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Update an existing transaction by ID
      description: Update an existing transaction by ID
      operationId: updateTransaction
      parameters:
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: Update category
                example: "Food"
              note:
                type: string
                description: Update note
                example: "lorem ipsum"
      produces:
        - application/json
      responses:
        '200':
          description: Transaction successfully updated
          schema:
            $ref: '#/definitions/TransactionDetail'
        '404':
          description: Invalid transactionId
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: Courriel de l'utilisateur
      password:
        type: string
        description: Mot de passe de l'utilisateur
      firstName:
        type: string
        description: Prénom de l'utilisateur
      lastName:
        type: string
        description: Nom de famille de l'utilisateur
      userName:
        type: string
        description: Nom public de l'utilisateur
  Login:
    type: object
    properties:
      email:
        type: string
        description: Courriel de l'utilisateur
      password:
        type: string
        description: Mot de passe de l'utilisateur
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      transactionId:
        type: number
        description: ID de la transaction
        example: 134872901
      title:
        type: string
        description: Titre de la transaction
        example: "Argent Bank Checking (x8349)"
      money:
        type: number
        format: float
        description: Montant de la transaction (USD)
        example: 2082.79
      balanceType:
        type: string
        description: "Available balance"
        example: "Available balance"
  TransactionDetail:
    type: object
    properties:
      date:
        type: string
        format: date-time
        description: Date de la transaction
        example: "2023-05-21T12:00:00Z"
      descriptionTransaction:
        type: string
        description: Description de la transaction
        example: "Grocery Shopping"
      amount:
        type: integer
        format: int64
        description: Transaction amount
        example: 50
      balance:
        type: integer
        format: int64
        description: Account balance after transaction
        example: 2187.79
      subProperties:
        type: object
        properties:
          transactionType:
            type: string
            description: Type de transaction
            example: "Electronic"
          category:
            type: string
            description: Catégorie de transaction
            example: "Food"
            enum:
              - Food
              - House
              - Car
          note:
            type: string
            description: Remarques sur la transaction
            example: "Lorem ipsum"
