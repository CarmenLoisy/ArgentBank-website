swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Alls accounts
      summary: Get user accounts
      description: search user accounts list
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            $ref: '#/definitions/Accounts'
        '400':
          description: Invalid Fields
        '401':
          description: User is not authorized
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
  /transactions/{currentMonth}:
    get:
      description: Retrieve details of a specific transaction
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get Current Month Transactions
      description: API for fetching the current month transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: path
          name: currentMonth
          description: Current month in YYYY-MM format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success. Returns the details of the transactions for the specified month.
          schema:
            $ref: '#/definitions/TransactionsMonthResponse'
        '401':
          description: Unauthorized. Invalid or missing token.
        '404':
          description: Transactions not found.
        '500':
          description: Server error.
  /transactions/{transactionId}:
    get:
      description: Retrieve details of a specific transaction
      security:
        - Bearer: []
      tags:
        - Transaction Details
      summary: Get transaction details
      description: API for fetching details of a transaction
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
      responses:
        '200':
          description: Success. Returns the details of the specified transaction.
        '401':
          description: Unauthorized. Invalid or missing token.
        '404':
          description: Transaction not found.
        '500':
          description: Server error.
    put:
      description: Update or add information of a specific transaction
      security:
        - Bearer: []
      tags:
        - Update transaction attributes
      summary: Update Transaction
      description: API for updating an existing transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: Update category
                example: Food
              note:
                type: string
                description: Update note
                example: Lorem ipsum
      produces:
        - application/json
      responses:
        '200':
          description: Success. Returns the details of the updated transaction.
        '401':
          description: Unauthorized. Invalid or missing token.
        '404':
          description: Transaction not found.
        '500':
          description: Server error.
    delete:
      description: Delete information of a specific transaction
      security:
        - tokenAuth: []
      tags:
        - Transactions Module
      summary: Delete Transaction
      description: API for deleting a transaction by ID  
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to delete
          required: true
          type: string
      responses:
        '204':
          description: Success. The transaction has been deleted successfully.
        '401':
          description: Unauthorized. Invalid or missing token.
        '404':
          description: Transaction not found.
        '500':
          description: Server error.
    post:
      description: Add information related to a specific transaction
      security:
        - tokenAuth: []
      tags:
        - Transactions Module
      summary: Add Transaction Information
      description: API for adding information to an existing transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to add information
          required: true
          type: string
        - in: body
          name: info
          description: Object representing the information to be added
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        '201':
          description: Success. The information has been added successfully.
        '400':
          description: Bad request. Please check the provided data.
        '401':
          description: Unauthorized. Invalid or missing token.
        '404':
          description: Transaction not found.
        '500':
          description: Server error.

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string    
  Accounts:
    type: object
    properties:
      accountId:
        type: string
        description: Title of Account
        example: Argent Bank Checking (x8349)
      money:
        type: number
        format: float
        description: Account balance (USD)
        example: 2082.79
      balanceType:
        type: string
        description: Balance type of account
        example: Available balance
  TransactionsMonthResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        format: string
        example: Transactions successfully recovered
        transactions:
          type: array
          items:
            $ref: '#/definitions/TransactionId'
  TransactionId:
    type: object
    properties:
      date:
        type: string
        format: date-time
        description: Transaction date
        example: 2023-05-21T12:00:00Z
      descriptionTransaction:
        type: string
        description: Transaction description
        example: Grocery Shopping
      amount:
        type: integer
        format: int64
        description: Transaction amount
        example: 50
      balance:
        type: integer
        format: int64
        description: Account balance after transaction
        example: 2187.79
      subProperties:
        type: object
        properties:
          transactionType:
            type: string
            description: Transaction type
            example: Electronic
          category:
            type: string
            description: Transaction category
            example: Food
            enum:
              - Food
              - House
              - Car
          note:
            type: string
            description: Transaction notes
            example: Lorem ipsum